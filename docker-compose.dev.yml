version: "3.8"

services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mysql-auth
    env_file:
      - .env
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${AUTH_DB}
      - MYSQL_PORT=${MYSQL_PORT}

  mysql-auth:
    image: mysql:8
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${AUTH_DB}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - mysql-auth-data:/var/lib/mysql
      - ./auth/config/entrypoint.sql:/docker-entrypoint-initdb.d/init.sql:ro

  messaging:
    build:
      context: ./messaging
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mysql-messaging
    env_file:
      - .env
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MESSAGING_DB}
      - MYSQL_PORT=${MYSQL_PORT}

  mysql-messaging:
    image: mysql:8
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MESSAGING_DB}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - mysql-messaging-data:/var/lib/mysql

  storage:
    build:
      context: ./storage
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mysql-storage
    env_file:
      - .env
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${STORAGE_DB}
      - MYSQL_PORT=${MYSQL_PORT}

  mysql-storage:
    image: mysql:8
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${STORAGE_DB}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - mysql-storage-data:/var/lib/mysql

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - auth
      - messaging
      - storage
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql-auth-data:
  mysql-messaging-data:
  mysql-storage-data:

networks:
  app-network:
    driver: bridge
