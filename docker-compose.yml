version: "3.8"

services:
  auth:
    build:
      context: ./backend/auth
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mongo-auth
    env_file:
      - .env
    environment:
      - MONGO_HOST=${MONGO_HOST_AUTH}
      - MONGO_PORT=${MONGO_PORT_AUTH}
      - MONGO_DATABASE=${MONGO_DATABASE_AUTH}
      - MONGO_URI=${MONGO_URI_AUTH}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped

  mongo-auth:
    image: mongo:latest
    networks:
      - app-network
    volumes:
      - mongo-auth-data:/data/db

  models:
    build:
      context: ./backend/models
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mongo-models
    env_file:
      - .env
    environment:
      - MONGO_HOST=${MONGO_HOST_MODELS}
      - MONGO_PORT=${MONGO_PORT_MODELS}
      - MONGO_DATABASE=${MONGO_DATABASE_MODELS}
      - JWT_SECRET=${JWT_SECRET}

  mongo-models:
    image: mongo:latest
    networks:
      - app-network
    volumes:
      - mongo-models-data:/data/db

  storage:
    build:
      context: ./backend/storage
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - mongo-storage
      - minio
    env_file:
      - .env
    environment:
      - MONGO_HOST=${MONGO_HOST_STORAGE}
      - MONGO_PORT=${MONGO_PORT_STORAGE}
      - MONGO_DATABASE=${MONGO_DATABASE_STORAGE}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - JWT_SECRET=${JWT_SECRET}
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped

  mongo-storage:
    image: mongo:latest
    networks:
      - app-network
    volumes:
      - mongo-storage-data:/data/db

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - auth
      - models
      - storage
    networks:
      - app-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    command: server /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongo-auth-data:
  mongo-models-data:
  mongo-storage-data:
  minio-data:

networks:
  app-network:
    driver: bridge